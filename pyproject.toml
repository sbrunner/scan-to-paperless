[tool.black]
line-length = 110
target-version = ["py39"]

[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict = true
plugins = ["numpy.typing.mypy_plugin"]

[tool.pytest.ini_options]
pytest_plugins = ["pytest_profiling"]

[tool.poetry]
name = "scan-to-paperless"
version = "0.0.0"
description = "Tool to scan and process documents to paperless"
readme = "README.md"
keywords = ["scan", "paperless"]
license = "BSD-2-Clause"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Typing :: Typed",
]
authors = ["St√©phane Brunner <stephane.brunner@gmail.com>"]
homepage = "https://hub.docker.com/r/sbrunner/scan-to-paperless/"
repository = "https://github.com/sbrunner/scan-to-paperless"

[tool.poetry.scripts]
scan = "scan_to_paperless.scan:main"
scan-process-status = "scan_to_paperless.scan_process_status:main"
scan-process = "scan_to_paperless.process:main"
add-codes-page = "scan_to_paperless.code:main"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
numpy = "1.25.2"
scikit-image = "0.21.0"
opencv-contrib-python-headless = "4.8.0.74"
deskew = "1.4.3"
"ruamel.yaml" = "0.17.32"
argcomplete = "3.1.1"
Pillow = "10.0.0"
PyPDF2 = "3.0.1"
pyzbar = "0.1.9"
reportlab = "4.0.4"
weasyprint = "59.0"
cffi = "1.15.1"
pikepdf = "8.2.3"
zxing-cpp = "2.1.0"
pyperclip = "1.8.2"
tifffile = "2023.7.18"
deepmerge = "1.1.0"
matplotlib = "3.7.2"
typing-extensions = "4.7.1"
Jinja2 = "3.1.2"
natsort = "8.4.0"

[tool.poetry.dev-dependencies]
prospector = { version = "1.10.2", extras = ["with_bandit", "with_mypy", "with_pyroma"] }
pytest = "7.4.0"
pytest-profiling = "1.7.0"
pytest-rerunfailures = "12.0"
pyroma = "4.2"
typing-extensions = "4.7.1"
c2cwsgiutils = { version = "6.0.0.dev142", extras = ["test_images"] }

[tool.poetry.group.dev.dependencies]
prospector-profile-duplicated = "0.1.0"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"
